# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.1.0 on Sat Jan 25 18:04:41 2025
#

import wx
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
from utils.file_handler import FileHandler
from utils.settings_manager import SettingsManager
from utils.worker import convert_async
from utils.tab_manager import init_tab_manager
from UI.Parameters import Parameters
from UI.Position import Position
from UI.Speed import Speed
from core.rendering.visualization import ModelVisualisation
from core.model.position_presets import PositionPresets
import logging, os
# end wxGlade


class MainFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MainFrame.__init__
        self.position_presets = PositionPresets()
        self.settings_manager = SettingsManager()
        self.app_settings = self.settings_manager.load_all_settings()
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((1200, 800))
        self.SetTitle("G-Code to RAPID Converter")
        self.SetBackgroundColour(wx.Colour(240, 240, 240))

        # Menu Bar
        self.frame_menubar = wx.MenuBar()
        self.SetMenuBar(self.frame_menubar)
        # Menu Bar end

        main_sizer = wx.BoxSizer(wx.VERTICAL)

        content_sizer = wx.BoxSizer(wx.HORIZONTAL)
        main_sizer.Add(content_sizer, 1, wx.EXPAND, 0)

        self.toolbox_panel = wx.Panel(self, wx.ID_ANY, style=wx.BORDER_SIMPLE)
        self.toolbox_panel.SetBackgroundColour(wx.Colour(222, 222, 222))
        content_sizer.Add(self.toolbox_panel, 0, wx.ALL | wx.EXPAND, 5)

        toolbox_sizer = wx.BoxSizer(wx.VERTICAL)

        self.btn_parameters = wx.Button(self.toolbox_panel, wx.ID_ANY, u"Nastaviť parametre")
        toolbox_sizer.Add(self.btn_parameters, 0, wx.ALL | wx.EXPAND, 5)

        self.btn_position = wx.Button(self.toolbox_panel, wx.ID_ANY, u"Nastaviť polohovanie")
        toolbox_sizer.Add(self.btn_position, 0, wx.ALL | wx.EXPAND, 5)

        self.notebook_main = wx.Notebook(self, wx.ID_ANY)
        content_sizer.Add(self.notebook_main, 1, wx.ALL | wx.EXPAND, 5)

        self.conversion_tab = wx.Panel(self.notebook_main, wx.ID_ANY)
        self.notebook_main.AddPage(self.conversion_tab, u"Konverzia kódu")

        conversion_sizer = wx.BoxSizer(wx.VERTICAL)

        text_sizer = wx.BoxSizer(wx.HORIZONTAL)
        conversion_sizer.Add(text_sizer, 1, wx.ALL | wx.EXPAND, 5)

        left_sizer = wx.BoxSizer(wx.VERTICAL)
        text_sizer.Add(left_sizer, 1, wx.EXPAND | wx.RIGHT, 5)

        label_gcode = wx.StaticText(self.conversion_tab, wx.ID_ANY, "G-Code Input:")
        left_sizer.Add(label_gcode, 0, wx.BOTTOM, 5)

        self.gcode_input = wx.TextCtrl(self.conversion_tab, wx.ID_ANY, "", style=wx.TE_MULTILINE)
        left_sizer.Add(self.gcode_input, 1, wx.EXPAND, 0)

        right_sizer = wx.BoxSizer(wx.VERTICAL)
        text_sizer.Add(right_sizer, 1, wx.EXPAND | wx.LEFT, 5)

        label_rapid = wx.StaticText(self.conversion_tab, wx.ID_ANY, "RAPID Output:")
        right_sizer.Add(label_rapid, 0, wx.BOTTOM, 5)

        self.rapid_output = wx.TextCtrl(self.conversion_tab, wx.ID_ANY, "", style=wx.TE_MULTILINE)
        right_sizer.Add(self.rapid_output, 1, wx.EXPAND, 0)

        button_sizer = wx.BoxSizer(wx.HORIZONTAL)
        conversion_sizer.Add(button_sizer, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 5)

        self.btn_load = wx.Button(self.conversion_tab, wx.ID_ANY, u"Načítat G-kód")
        self.btn_load.SetBackgroundColour(wx.Colour(200, 220, 255))
        button_sizer.Add(self.btn_load, 0, wx.ALL, 5)

        self.btn_convert = wx.Button(self.conversion_tab, wx.ID_ANY, u"Konvertovat G-kód do RAPID")
        self.btn_convert.SetBackgroundColour(wx.Colour(200, 220, 255))
        button_sizer.Add(self.btn_convert, 0, wx.ALL, 5)

        self.btn_save = wx.Button(self.conversion_tab, wx.ID_ANY, u"Uložit kod RAPID")
        self.btn_save.SetBackgroundColour(wx.Colour(200, 220, 255))
        button_sizer.Add(self.btn_save, 0, wx.ALL, 5)

        self.visualization_tab = wx.Panel(self.notebook_main, wx.ID_ANY)
        self.notebook_main.AddPage(self.visualization_tab, u"Vizualizácia")

        visualization_sizer = wx.BoxSizer(wx.VERTICAL)

        self.window_1 = ModelVisualisation(self.visualization_tab, wx.ID_ANY)
        visualization_sizer.Add(self.window_1, 1, wx.EXPAND, 0)

        self.status_panel = wx.Panel(self, wx.ID_ANY)
        main_sizer.Add(self.status_panel, 0, wx.EXPAND, 0)

        status_sizer = wx.BoxSizer(wx.HORIZONTAL)

        self.progress_bar = wx.Gauge(self.status_panel, wx.ID_ANY, 100)
        self.progress_bar.SetMinSize((200, -1))
        status_sizer.Add(self.progress_bar, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT, 5)

        self.status_text = wx.StaticText(self.status_panel, wx.ID_ANY, u"Pripravené")
        status_sizer.Add(self.status_text, 1, wx.ALIGN_CENTER_VERTICAL | wx.LEFT, 10)

        self.btn_help = wx.Button(self.status_panel, wx.ID_ANY, "?")
        self.btn_help.SetMinSize((35, 20))
        self.btn_help.SetBackgroundColour(wx.Colour(200, 200, 200))
        self.btn_help.SetForegroundColour(wx.Colour(0, 0, 0))
        status_sizer.Add(self.btn_help, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT | wx.RIGHT, 5)

        self.status_panel.SetSizer(status_sizer)

        self.visualization_tab.SetSizer(visualization_sizer)

        self.conversion_tab.SetSizer(conversion_sizer)

        self.toolbox_panel.SetSizer(toolbox_sizer)

        self.SetSizer(main_sizer)

        self.Layout()
        
        self.notebook_main.SetSelection(0)

        self.btn_parameters.Bind(wx.EVT_BUTTON, self.open_dialog_parameters)
        self.btn_position.Bind(wx.EVT_BUTTON, self.open_dialog_position)
        self.btn_load.Bind(wx.EVT_BUTTON, self.load_gcode)
        self.btn_convert.Bind(wx.EVT_BUTTON, self.open_dialog_speed)
        self.btn_save.Bind(wx.EVT_BUTTON, self.save_rapid)
        self.btn_help.Bind(wx.EVT_BUTTON, self.open_help)
        self.notebook_main.Bind(wx.EVT_NOTEBOOK_PAGE_CHANGING, self.on_notebook_page_changing)
        self.notebook_main.Bind(wx.EVT_NOTEBOOK_PAGE_CHANGED, self.on_notebook_page_changed)

        self.tab_manager = init_tab_manager(self)
        # end wxGlade

    def save_settings(self):
        self.settings_manager.save_all_settings(self.app_settings)

    def load_gcode(self, event):  # wxGlade: MainFrame.<event_handler>
        file_path = self.get_gcode_file_path()
        if not file_path:
            return

        if self.load_gcode_from_file(file_path):
            filename = os.path.basename(file_path)
            self.window_1.set_filename(filename)
        else:
            self.update_status("Chyba načítania", 0)
        event.Skip()

    def start_conversion(self, gcode_text):
        self.update_status("Prebieha konverzia G-kódu...", 50)
        convert_async(gcode_text, self.app_settings, self.on_conversion_complete)

    def on_conversion_complete(self, rapid_code):
        if rapid_code:
            logging.info("G-code conversion completed successfully.")
            wx.CallAfter(self.rapid_output.SetValue, rapid_code)
            wx.CallAfter(self.update_status, "Konverzia dokončená", 100)
            wx.CallAfter(self.window_1.set_rapid_text, rapid_code)
        else:
            logging.error("G-code conversion returned empty RAPID code.")
            wx.CallAfter(self.update_status, "Chyba konverzie", 0)

    def save_rapid(self, event):  # wxGlade: MainFrame.<event_handler>
        logging.info("Attempting to save RAPID code...")
        rapid_code = self.rapid_output.GetValue()
        if not rapid_code:
            logging.error("RAPID code is empty, cannot save.")
            wx.MessageBox("RAPID kód je prázdny", "Chyba uloženia", wx.ICON_ERROR)
            return

        error_messages = self.check_settings_validity()
        if error_messages:
            logging.error("Settings validation failed: %s", error_messages)
            wx.MessageBox("Pred uložením nastavte všetky požadované parametre:\n" + "\n".join(error_messages),
                          "Chyba nastavenia", wx.ICON_ERROR)
            return

        output_path = self.get_rapid_save_file_path()
        if output_path:
            logging.info("Saving RAPID code to: %s", output_path)
            try:
                self.save_rapid_to_file(rapid_code, output_path)
                logging.info("RAPID code successfully saved to %s", output_path)
            except Exception as e:
                logging.exception("Failed to save RAPID code to %s: %s", output_path, str(e))
                wx.MessageBox(f"Chyba pri ukladaní súboru: {str(e)}", "Chyba uloženia", wx.ICON_ERROR)
        event.Skip()

    @staticmethod
    def open_help(event):  # wxGlade: MainFrame.<event_handler>
        help_text = """
        Návod na použitie:
        1. Načítajte G-kód pomocou tlačidla „Načítať G-kód“.
        2. Nastavenie názvov(Tool, Modul, Proces, WorkObj)
        3. Nastavte parametre (TCP, WorkObj)
        4. Kliknutím na tlačidlo „Konvertovať G-kód do RAPID“ skonvertujete
        5. Uložte kód RAPID pomocou tlačidla „Uložiť kód RAPID“ 

        Poznámka: Všetky parametre musia byť pred konverziou a uložením správne nastavené.
        Pozícia TCP musí byť číslo.
        Module, Process a ToolNames (Názvy modulov, procesov a nástrojov) musia obsahovať len písmená, číslice a podčiarkovníky.
        """
        wx.MessageBox(help_text, "Inštrukcie", wx.OK | wx.ICON_INFORMATION)
        event.Skip()

    def check_settings_validity(self):
        error_messages = []
        if not self.app_settings.get_parameters:
            error_messages.append("Názvy")
        return error_messages

    def update_status(self, message, progress=0):
        self.status_text.SetLabel(message)
        self.progress_bar.SetValue(progress)

    def load_gcode_from_file(self, file_path):
        try:
            with open(file_path, 'r') as file:
                self.gcode_input.SetValue(file.read())
            self.rapid_output.SetValue("")
            self.window_1.reset_visualize_state()
            self.update_status("G-kód je načítaný", 100)
            return True
        except (OSError, IOError) as e:
            wx.MessageBox(f"Error loading file: {e}", "Chyba súboru", wx.ICON_ERROR)
            self.update_status("Chyba načítania", 0)
            return False

    def get_rapid_save_file_path(self):
            with wx.FileDialog(self, "Uložiť súbor RAPID", wildcard="RAPID files (*.mod)|*.mod",
                               style=wx.FD_SAVE | wx.FD_OVERWRITE_PROMPT) as file_dialog:
                if file_dialog.ShowModal() == wx.ID_CANCEL:
                    return None
                return file_dialog.GetPath()

    def get_gcode_file_path(self):
        with wx.FileDialog(
                self, "Otvoriť súbor G-Code",
                wildcard="G-Code files (*.gcode)|*.gcode",
                style=wx.FD_OPEN | wx.FD_FILE_MUST_EXIST
        ) as file_dialog:
            if file_dialog.ShowModal() == wx.ID_CANCEL:
                return None
            return file_dialog.GetPath()

    def save_rapid_to_file(self, rapid_code, output_path):
        try:
            FileHandler().write_rapid_file(rapid_code.splitlines(), output_path, self.app_settings)
            self.update_status("RAPID kód uložený", 100)
        except Exception as e:
            wx.MessageBox(f"Error saving file: {str(e)}", "Chyba uloženia", wx.ICON_ERROR)
            self.update_status("Chyba uloženia", 0)


    def open_dialog_position(self, event):  # wxGlade: MainFrame.<event_handler>
        dialog = Position(self)
        dialog.ShowModal()
        dialog.Destroy()

        error_messages = self.check_settings_validity()
        if error_messages:
            self.update_status("Upozornenie: " + ", ".join(error_messages), 0)

        event.Skip()

    def open_dialog_speed(self, event):  # wxGlade: MainFrame.<event_handler>
        dialog = Speed(self)
        dialog.ShowModal()
        dialog.Destroy()

        error_messages = self.check_settings_validity()
        if error_messages:
            self.update_status("Upozornenie: " + ", ".join(error_messages), 0)

        event.Skip()

    def open_dialog_parameters(self, event):  # wxGlade: MainFrame.<event_handler>
        dialog = Parameters(self)
        dialog.ShowModal()
        dialog.Destroy()
        error_messages = self.check_settings_validity()
        if error_messages:
            self.update_status("Upozornenie: " + ", ".join(error_messages), 0)

        event.Skip()

    @staticmethod
    def on_notebook_page_changed(event):
        event.Skip()

    def on_notebook_page_changing(self, event):
        if not self.tab_manager.handle_tab_change(event):
            event.Veto()
            return
# end of class MainFrame